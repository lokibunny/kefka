<UserControl x:Class="Kefka.Views.AdvancedControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Kefka.ViewModels"
             xmlns:advanced="clr-namespace:Kefka.Views.Advanced"
             xmlns:controls="clr-namespace:Kefka.Controls"
             xmlns:loc="clr-namespace:Kefka.Properties"
             xmlns:utilities="clr-namespace:Kefka.Utilities"
             xmlns:enums="clr-namespace:Kefka.Models"
             xmlns:mahAppsControls="clr-namespace:KefkaUI.Metro.Controls;assembly=KefkaUI.Metro"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <viewModels:SettingsViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <utilities:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Margin="10">
        <mahAppsControls:MetroAnimatedTabControl TabStripPlacement="Left">
            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Additional}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0">
                        <Button Content="{x:Static loc:Strings.MarkRBLog}" Margin="0,2,0,20" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetMarkerCommand}" />
                        <CheckBox Margin="2" Content="{x:Static loc:Strings.UseHPPotions}" IsChecked="{Binding Settings.UseHpPotions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Margin="2" Content="{x:Static loc:Strings.UseCastOrQueue}" IsChecked="{Binding Settings.UseCastorQueue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Margin="2" Content="{x:Static loc:Strings.RandomizeLogColor}" IsChecked="{Binding Settings.RandomizeLogColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Margin="2" Content="{x:Static loc:Strings.AutoCommenceDuty}" IsChecked="{Binding Settings.AutoCommenceDuty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Margin="2" Content="{x:Static loc:Strings.NotifyIfDutyIsReady}" IsChecked="{Binding Settings.AutoDutyNotify, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Margin="2" Content="Auto-Sprint" IsChecked="{Binding Settings.UseAutoSprint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Margin="2" Content="Safe Names" IsChecked="{Binding Settings.UseSafeNames, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Margin="2" Content="Use Debug Logging" IsChecked="{Binding Settings.UseDebugLogging, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <controls:KefkaIntNumeric HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="100" LabelContent="{x:Static loc:Strings.AutoDutyVolume}" Value="{Binding Settings.AutoDutyVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:KefkaIntNumeric HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="5000" LabelContent="{x:Static loc:Strings.AutoCommenceDelay}" Value="{Binding Settings.AutoCommenceDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:KefkaIntNumeric HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="5000" LabelContent="{x:Static loc:Strings.LagAdjust}" Value="{Binding Settings.LagAdjust, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:KefkaIntNumeric HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="100" LabelContent="{x:Static loc:Strings.HPPotionHPPct}" Value="{Binding Settings.PotionHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:KefkaIntNumeric HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="5000" LabelContent="{x:Static loc:Strings.PotionUseDelay}" Value="{Binding Settings.PotionDelayAdjust, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:KefkaIntNumeric HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="5000" LabelContent="{x:Static loc:Strings.AuraCheckAdjust}" Value="{Binding Settings.AuraCheckAdjust, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <StackPanel>
                            <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.NonOpenerDPSPotionSelection}" />
                            <ComboBox  Margin="2" SelectedValue="{Binding SelectedPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding GuiPotionList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.DataContext>
                                    <viewModels:DPS_PotionViewModel />
                                </ComboBox.DataContext>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Item.CurrentLocaleName}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel>
                            <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.HpPotion}" />
                            <ComboBox Margin="2" MinWidth="230"  SelectedValue="{Binding Settings.SelectedPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:HpPotionSelection}}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </mahAppsControls:MetroTabItem>
            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Hotkeys}">
                <mahAppsControls:MetroTabItem.DataContext>
                    <viewModels:HotkeysViewModel />
                </mahAppsControls:MetroTabItem.DataContext>
                <Grid>
                    <StackPanel Grid.Column="0">
                        <controls:HotkeyControl Text="{x:Static loc:Strings.Destroy}" ModKeySetting="{Binding Main.DestroyModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Main.DestroyKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:HotkeyControl Text="{x:Static loc:Strings.Marker}" ModKeySetting="{Binding Main.MarkerModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Main.MarkerKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:HotkeyControl Text="Overlay Toggle" ModKeySetting="{Binding Main.OverlayModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Main.OverlayKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </Grid>
            </mahAppsControls:MetroTabItem>
            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.InterruptsAndStuns}">
                <advanced:Interrupts />
            </mahAppsControls:MetroTabItem>
            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.CombatSettings}">
                <advanced:CombatSettings />
            </mahAppsControls:MetroTabItem>
            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.TankBusters}">
                <advanced:TankBusters />
            </mahAppsControls:MetroTabItem>
            <mahAppsControls:MetroTabItem Header="HealBusters">
                <advanced:HealBusters />
            </mahAppsControls:MetroTabItem>
            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.SpellLog}">
                <advanced:SpellLog />
            </mahAppsControls:MetroTabItem>
            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.UIOptions}">
                <advanced:UIOptions />
            </mahAppsControls:MetroTabItem>
            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.ChangeLog}">
                <advanced:ChangeLog />
            </mahAppsControls:MetroTabItem>
        </mahAppsControls:MetroAnimatedTabControl>
    </StackPanel>
</UserControl>