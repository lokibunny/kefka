<UserControl x:Class="Kefka.Views.Routines.Barret"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Kefka.ViewModels"
             xmlns:enums="clr-namespace:Kefka.Models"
             xmlns:controls="clr-namespace:Kefka.Controls"
             xmlns:openers="clr-namespace:Kefka.Views.Openers"
             xmlns:loc="clr-namespace:Kefka.Properties"
             xmlns:utilities="clr-namespace:Kefka.Utilities"
             xmlns:mahAppsControls="clr-namespace:KefkaUI.Metro.Controls;assembly=KefkaUI.Metro"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <viewModels:SettingsViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <utilities:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <mahAppsControls:MetroAnimatedTabControl>
        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.General}">
            <Grid HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Expander Margin="2" Grid.Row="0" Header="{x:Static loc:Strings.RoutineToggles}">
                    <UniformGrid Columns="3" HorizontalAlignment="Center">
                        <CheckBox Content="{x:Static loc:Strings.AoE}" IsChecked="{Binding Barret.UseAoE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Buffs}" IsChecked="{Binding Barret.UseBuffs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Blank}" IsChecked="{Binding Barret.UseBlank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Opener}" IsChecked="{Binding Barret.UseOpener, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="WF w/ OH Only" IsChecked="{Binding Barret.UseWildfireWithOverheatOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Wildfire}" IsChecked="{Binding Barret.UseWildfire, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.HeartBreak}" IsChecked="{Binding Barret.UseHeartBreak, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Cooldowns}" IsChecked="{Binding Barret.UseCooldowns, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DPSPotion}" IsChecked="{Binding Barret.UseDpsPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.GaussBarrel}" IsChecked="{Binding Barret.UseGaussBarrel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.AutoAmmo}" IsChecked="{Binding Barret.UseAutoAmmo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DismantleMind}" IsChecked="{Binding Barret.UseDismantleMind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.InterruptList}" IsChecked="{Binding Barret.UseInterruptList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Barret.UncheckUseManualInterruptCommand}" />
                        <CheckBox Content="{x:Static loc:Strings.Hypercharge}" IsChecked="{Binding Barret.UseHypercharge, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Peloton" IsChecked="{Binding Barret.UsePeloton, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ManualInterrupt}" IsChecked="{Binding Barret.UseManualInterrupt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Barret.UncheckUseInterruptListCommand}" />
                        <CheckBox Content="Flamethrower" IsChecked="{Binding Barret.UseFlamethrower, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </Expander>
                <Expander Margin="2" Grid.Row="1" Header="{x:Static loc:Strings.OverlayToggles}">
                    <UniformGrid Columns="3" HorizontalAlignment="Center">
                        <CheckBox Content="{x:Static loc:Strings.AoE}" IsChecked="{Binding Barret.ShowAoE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Buffs}" IsChecked="{Binding Barret.ShowBuffs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Blank}" IsChecked="{Binding Barret.ShowBlank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Opener}" IsChecked="{Binding Barret.ShowOpener, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Wildfire}" IsChecked="{Binding Barret.ShowWildfire, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.HeartBreak}" IsChecked="{Binding Barret.ShowHeartBreak, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Cooldowns}" IsChecked="{Binding Barret.ShowCooldowns, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DPSPotion}" IsChecked="{Binding Barret.ShowDpsPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.GaussBarrel}" IsChecked="{Binding Barret.ShowGaussBarrel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.AutoAmmo}" IsChecked="{Binding Barret.ShowAutoAmmo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DismantleMind}" IsChecked="{Binding Barret.ShowDismantleMind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.InterruptList}" IsChecked="{Binding Barret.ShowInterruptList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Hypercharge}" IsChecked="{Binding Barret.ShowHypercharge, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Peloton" IsChecked="{Binding Barret.ShowPeloton, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ManualInterrupt}" IsChecked="{Binding Barret.ShowManualInterrupt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Flamethrower" IsChecked="{Binding Barret.ShowFlamethrower, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </Expander>
                <Expander Margin="2" Grid.Row="3" Header="{x:Static loc:Strings.RefreshTimersAndBuffHoldValues}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <UniformGrid Grid.Row="0" HorizontalAlignment="Center" Columns="2">
                            <controls:KefkaIntNumeric Margin="0,2" HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="100"  LabelContent="{x:Static loc:Strings.HotShotRefresh}" Value="{Binding Barret.HotShotRfsh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="0,2" HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="100"  LabelContent="{x:Static loc:Strings.LeadShotRefresh}" Value="{Binding Barret.LeadShotRfsh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="0,2" HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="100"  LabelContent="{x:Static loc:Strings.WildfireBuffDelay}" Value="{Binding Barret.WfBuffDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="0,2" HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="100"  LabelContent="{x:Static loc:Strings.WildfireCDDelay}" Value="{Binding Barret.WfcdDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="0,2" HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="100"  LabelContent="{x:Static loc:Strings.WildfireProcDelay}" Value="{Binding Barret.WfProcDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="0,2" HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="100"  Increment="10"  LabelContent="Second Wind HP %" Value="{Binding Barret.SecondWindHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="0,2" HorizontalAlignment="Left" MinWidth="230" MinValue="0" MaxValue="100"  Increment="5"  LabelContent="Cooldown Threshold" Value="{Binding Barret.CooldownThreshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </UniformGrid>

                        <Separator Margin="0, 10, 0, 10" Grid.Row="2" />

                        <UniformGrid Margin="2" Grid.Row="3" Columns="2" HorizontalAlignment="Center">
                            <CheckBox HorizontalAlignment="Center" Content="Tactician" IsChecked="{Binding Barret.UseTactician, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox HorizontalAlignment="Center" Content="Refresh" IsChecked="{Binding Barret.UseRefresh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100"  Increment="10"  LabelContent="Tactician TP %" Value="{Binding Barret.TacticianTpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100"  Increment="10"  LabelContent="Refresh MP %" Value="{Binding Barret.RefreshMpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="8"  Increment="1"  LabelContent="Tactician Member Count" Value="{Binding Barret.TacticianMemberCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="8"  Increment="1"  LabelContent="Refresh Member Count" Value="{Binding Barret.RefreshMemberCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </UniformGrid>
                    </Grid>
                </Expander>
                <Expander Margin="2" Grid.Row="4" Header="{x:Static loc:Strings.AoEAndTurretSettings}">
                    <UniformGrid HorizontalAlignment="Center" Columns="2">
                        <StackPanel>
                            <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.AoEModeSelection}" />
                            <ComboBox Margin="2"  MinWidth="230" SelectedValue="{Binding Barret.AoEMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:BarretAoEModeSelection}}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel>
                            <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.TurretMode}" />
                            <ComboBox MinWidth="230"  Margin="2" SelectedValue="{Binding Barret.Turret, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:TurretMode}}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>

                        <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="1000"  Increment="10" LabelContent="{x:Static loc:Strings.MinimumTP}" Value="{Binding Barret.TpLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="10"  Increment="1"  LabelContent="{x:Static loc:Strings.TurretTargets}" Value="{Binding Barret.TurretMobCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="10"  Increment="1"  LabelContent="{x:Static loc:Strings.AoETargets}" Value="{Binding Barret.MobCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </Expander>
            </Grid>
        </mahAppsControls:MetroTabItem>

        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Hotkeys}">
            <mahAppsControls:MetroTabItem.DataContext>
                <viewModels:HotkeysViewModel />
            </mahAppsControls:MetroTabItem.DataContext>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <UniformGrid Grid.Row="0" Columns="5" HorizontalAlignment="Center">
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Blank}" ModKeySetting="{Binding Barret.BlankModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.BlankKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Buffs}" ModKeySetting="{Binding Barret.BuffsModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.BuffsKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.HeartBreak}" ModKeySetting="{Binding Barret.HeartBreakModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.HeartBreakKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Potion}" ModKeySetting="{Binding Barret.PotionModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.PotionKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.AoE}" ModKeySetting="{Binding Barret.AoEModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.AoEKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.GaussBarrel}" ModKeySetting="{Binding Barret.GaussBarrelModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.GaussBarrelKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Interrupt}" ModKeySetting="{Binding Barret.InterruptModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.InterruptKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.AutoAmmo}" ModKeySetting="{Binding Barret.AutoAmmoModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.AutoAmmoKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.AutoTurret}" ModKeySetting="{Binding Barret.AutoTurretModifer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.AutoTurretKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Cooldowns}" ModKeySetting="{Binding Barret.CooldownsModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.CooldownsKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Opener}" ModKeySetting="{Binding Barret.OpenerModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.OpenerKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Hypercharge}" ModKeySetting="{Binding Barret.HyperchargeModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.HyperchargeKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Wildfire}" ModKeySetting="{Binding Barret.WildfireModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.WildfireKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Force Overheat" ModKeySetting="{Binding Barret.ForceOverheatModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.ForceOverheatKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Flamethrower" ModKeySetting="{Binding Barret.FlamethrowerModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.FlamethrowerKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Overdrive" ModKeySetting="{Binding Barret.OverdriveModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.OverdriveKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
                <Separator Grid.Row="1" Margin="10" />
                <Label Grid.Row="2" HorizontalAlignment="Center" Content="Preset Hotkeys" />
                <UniformGrid Grid.Row="3" Columns="5" VerticalAlignment="Top">
                    <controls:HotkeyControl Text="{Binding Barret.PresetNames.Preset1Name}" ModKeySetting="{Binding Barret.Preset1Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.Preset1Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Barret.PresetNames.Preset2Name}" ModKeySetting="{Binding Barret.Preset2Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.Preset2Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Barret.PresetNames.Preset3Name}" ModKeySetting="{Binding Barret.Preset3Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.Preset3Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Barret.PresetNames.Preset4Name}" ModKeySetting="{Binding Barret.Preset4Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.Preset4Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Barret.PresetNames.Preset5Name}" ModKeySetting="{Binding Barret.Preset5Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Barret.Preset5Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
            </Grid>
        </mahAppsControls:MetroTabItem>
        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Opener}">
            <openers:Barret_Opener />
        </mahAppsControls:MetroTabItem>
        <mahAppsControls:MetroTabItem Header="Presets">
            <Grid Margin="0,10" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Grid.DataContext>
                    <viewModels:BarretPresetsViewModel />
                </Grid.DataContext>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Load" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadSettings}" />
                    <Button Grid.Column="1" Content="Save" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SaveSettingsAs}" />
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Set Preset 1" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset1}" />
                    <Button Grid.Column="1" Content="Set Preset 2" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset2}" />
                    <Button Grid.Column="2" Content="Set Preset 3" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset3}" />
                    <Button Grid.Column="3" Content="Set Preset 4" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset4}" />
                    <Button Grid.Column="4" Content="Set Preset 5" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset5}" />
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="{Binding Presets.Preset1Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset1}" />
                    <Button Grid.Column="1" Content="{Binding Presets.Preset2Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset2}" />
                    <Button Grid.Column="2" Content="{Binding Presets.Preset3Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset3}" />
                    <Button Grid.Column="3" Content="{Binding Presets.Preset4Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset4}" />
                    <Button Grid.Column="4" Content="{Binding Presets.Preset5Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset5}" />
                </Grid>
            </Grid>
        </mahAppsControls:MetroTabItem>
    </mahAppsControls:MetroAnimatedTabControl>
</UserControl>