<UserControl x:Class="Kefka.Views.Routines.Beatrix"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Kefka.ViewModels"
             xmlns:controls="clr-namespace:Kefka.Controls"
             xmlns:openers="clr-namespace:Kefka.Views.Openers"
             xmlns:loc="clr-namespace:Kefka.Properties"
             xmlns:mahAppsControls="clr-namespace:KefkaUI.Metro.Controls;assembly=KefkaUI.Metro"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <viewModels:SettingsViewModel />
    </UserControl.DataContext>

    <mahAppsControls:MetroAnimatedTabControl>
        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.General}">
            <Grid HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Expander Margin="2" Grid.Row="0" Header="{x:Static loc:Strings.RoutineToggles}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="Auto" />
                            <ColumnDefinition  Width="Auto" />
                            <ColumnDefinition  Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="OathButton" Grid.Column="0" Grid.Row="0" Content="Current Oath" Click="OathButton_Click" ToolTip="Switches Stances"/>
                        <Button x:Name="TankButton" Grid.Column="1" Grid.Row="0" Content="Tank Status" Click="TankButton_Click" ToolTip="Switches between Main Tanking and Off Tanking"/>

                        <CheckBox Grid.Column="0" Grid.Row="1" Content="{x:Static loc:Strings.Opener}" IsChecked="{Binding Beatrix.UseOpener, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use an Opener (Set in the Opener Tab)"/>
                        <CheckBox Grid.Column="1" Grid.Row="1" Content="{x:Static loc:Strings.DPSPotion}" IsChecked="{Binding Beatrix.UseDpsPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Potions Increasing DPS (Set in the Advanced Side Tab)"/>

                        <CheckBox Grid.Column="0" Grid.Row="2" Content="Ex-Provoke" IsChecked="{Binding Beatrix.UseShieldLob, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Provoke/Ultimatum/Shirk According to Routine Logic"/>
                        <CheckBox Grid.Column="1" Grid.Row="2" Content="{x:Static loc:Strings.ShieldLob}" IsChecked="{Binding Beatrix.UseShieldLob, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Shield Lob"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="3" Content="Fight or Flight" IsChecked="{Binding Beatrix.UseFightorFlight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Fight or Flight"/>
                        <CheckBox Grid.Column="1" Grid.Row="3" Content="Requiescat" IsChecked="{Binding Beatrix.UseRequiescat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Requiescat"/>

                        <TextBlock Grid.Column="0" Grid.Row="4" Text="Min Enmity Lead"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="4" MinValue="0" MaxValue="200000" Increment="100" LabelContent="ST" Value="{Binding Beatrix.RageofHaloneCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Enmity Lead to Stop Using Rage of Halone Rotation"/>

                        <CheckBox Grid.Column="0" Grid.Row="5" Content="{x:Static loc:Strings.Flash}" IsChecked="{Binding Beatrix.UseFlash, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Flash"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="5" MinValue="0" MaxValue="200000" Increment="100" Value="{Binding Beatrix.FlashCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Number of Flashes Used to Gain Enmity"/>
                        <controls:KefkaIntNumeric Grid.Column="2" Grid.Row="5" MinValue="0" MaxValue="10" Increment="1" Value="{Binding Beatrix.FlashMinEnemies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Enemies For Flash"/>

                        <CheckBox Grid.Column="0" Grid.Row="6" Content="Total Eclipse" IsChecked="{Binding Beatrix.UseTotalEclipse, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Total Eclipse"/>
                        <controls:KefkaIntNumeric Grid.Column="2" Grid.Row="6" MinValue="0" MaxValue="10" Increment="1" Value="{Binding Beatrix.TotalEclipseMinEnemies, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Enemies For Total Eclipse"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="6" MinValue="0" MaxValue="100" Increment="5" Value="{Binding Beatrix.TotalEclipseTpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum TP Percentage For Total Eclipse"/>

                        <CheckBox Grid.Column="1" Grid.Row="7" Content="{x:Static loc:Strings.ManualInterrupt}" IsChecked="{Binding Beatrix.UseManualInterrupt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Beatrix.UncheckUseInterruptListCommand}" ToolTip="Whether or not to Use Interrupts Manually, or in the Rotation"/>
                        <CheckBox Grid.Column="0" Grid.Row="7" Content="{x:Static loc:Strings.InterruptList}" IsChecked="{Binding Beatrix.UseInterruptList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Beatrix.UncheckUseManualInterruptCommand}" ToolTip="Whether or not to Use the Interrupt List when casting Interrupts"/>
                    </Grid>
                </Expander>

                <Expander Margin="2" Grid.Row="2" Header="{x:Static loc:Strings.Defensives}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="Auto" />
                            <ColumnDefinition  Width="Auto" />
                            <ColumnDefinition  Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Column="0" Grid.Row="0" Content="{x:Static loc:Strings.Defensives}" IsChecked="{Binding Beatrix.UseDefensives, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Defensive abilities"/>
                        <CheckBox Grid.Column="1" Grid.Row="0" Content="{x:Static loc:Strings.BusterDefense}" IsChecked="{Binding Beatrix.UseBusterDefense, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Defensive abilities for Tank Busters (Set in the Advanced Settings)"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="1" Content="{x:Static loc:Strings.Bulwark}" IsChecked="{Binding Beatrix.UseBulwark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Bulwark"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="1" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.BulwarkHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Bulwark"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="2" Content="{x:Static loc:Strings.Sentinel}" IsChecked="{Binding Beatrix.UseSentinel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Sentinel"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="2" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.SentinelHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Sentinel"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="3" Content="{x:Static loc:Strings.Sheltron}" IsChecked="{Binding Beatrix.UseSheltron, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Sheltron"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="3" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.SheltronHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Sheltron"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="4" Content="{x:Static loc:Strings.DivineVeil}" IsChecked="{Binding Beatrix.UseDivineVeil, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Divine Veil"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="4" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.DivineVeilHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Divine Veil"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="5" Content="H. G." IsChecked="{Binding Beatrix.UseHallowedGround, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to Use Hallowed Ground"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="5" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.HallowedGroundHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Hallowed Ground"/>

                        <TextBlock Grid.Column="0" Grid.Row="8" Text="Role Actions"/>
                        <CheckBox Grid.Column="0" Grid.Row="9" Content="{x:Static loc:Strings.Rampart}" IsChecked="{Binding Beatrix.UseRampart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Whether or not to Use Rampart"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="9" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.RampartHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Rampart"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="10" Content="{x:Static loc:Strings.Awareness}" IsChecked="{Binding Beatrix.UseAwareness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Whether or not to Use Awareness"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="10" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.AwarenessHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Awareness"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="11" Content="{x:Static loc:Strings.Anticipation}" IsChecked="{Binding Beatrix.UseAnticipation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Whether or not to Use Anticipation"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="11" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.AnticipationHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Anticipation"/>
                        
                        <CheckBox Grid.Column="0" Grid.Row="12" Content="{x:Static loc:Strings.Convalescence}" IsChecked="{Binding Beatrix.UseConvalescence, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Whether or not to Use Convalescence"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="12" Margin="2" MinWidth="0" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.ConvalescenceHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Convalescence"/>
                    </Grid>
                </Expander>
                
                <Expander Margin="2" Grid.Row="6" Header="{x:Static loc:Strings.ClemencyCoverTargetSettingsAndAdvancedSettings}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="Auto" />
                            <ColumnDefinition  Width="Auto" />
                            <ColumnDefinition  Width="Auto" />
                            <ColumnDefinition  Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <controls:KefkaIntNumeric Grid.Column="0" Grid.Row="0" MaxValue="100"  Increment="5"  LabelContent="Self" Value="{Binding Beatrix.ClemencyHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Clemency on Self"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="0" MinValue="0" MaxValue="100"  Increment="5"  LabelContent="Tank" Value="{Binding Beatrix.TankClemencyHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Clemency on Tanks"/>
                        <controls:KefkaIntNumeric Grid.Column="2" Grid.Row="0" MinValue="0" MaxValue="100"  Increment="5"  LabelContent="Healer" Value="{Binding Beatrix.HealerClemencyHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Clemency on Healers"/>
                        <controls:KefkaIntNumeric Grid.Column="3" Grid.Row="0" MinValue="0" MaxValue="100"  Increment="5"  LabelContent="Dps" Value="{Binding Beatrix.DpsClemencyHpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum health percentage to Use Clemency on DPS"/>

                        <CheckBox Grid.Column="0" Grid.Row="1" Content="{x:Static loc:Strings.ManualClemency}" IsChecked="{Binding Beatrix.UseManualClemency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Beatrix.UncheckUseClemencyTargetCommand}" ToolTip="Whether or not to have the rotation Use Clemency"/>
                        <CheckBox Grid.Column="1" Grid.Row="1" Content="{x:Static loc:Strings.ClemencyTarget}" IsChecked="{Binding Beatrix.UseClemencyTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Beatrix.UncheckUseManualClemencyCommand}" ToolTip="Whether or not to Use the set Clemency Target (Set in the Toggle Overlay under Advanced)"/>
                        <CheckBox Grid.Column="2" Grid.Row="1" Content="Clemency Over Req" IsChecked="{Binding Beatrix.UseClemencyOverReq, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Beatrix.UncheckUseManualClemencyCommand}" ToolTip="Whether or not to prioritize healing with Clemency over dealing damage with Holy Spirit during Requiescat"/>

                        <CheckBox Grid.Column="0" Grid.Row="2" Content="{x:Static loc:Strings.ManualCover}" IsChecked="{Binding Beatrix.UseManualCover, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Beatrix.UncheckUseCoverTargetCommand}" ToolTip="Whether or not to have the rotation Use Cover"/>
                        <CheckBox Grid.Column="1" Grid.Row="2" Content="{x:Static loc:Strings.CoverTarget}" IsChecked="{Binding Beatrix.UseCoverTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Beatrix.UncheckUseManualCoverCommand}" ToolTip="Whether or not to Use the set Cover Target (Set in the Toggle Overlay under Advanced)"/>

                        <CheckBox Grid.Column="0" Grid.Row="3" Content="{x:Static loc:Strings.RecoverMPOverride}" IsChecked="{Binding Beatrix.UseRecoverMpOverride, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Whether or not to override the Rage of Halone rotation to recover MP with Riot Blade (Only under Level 54)"/>
                        <controls:KefkaIntNumeric Grid.Column="1" Grid.Row="3" MinValue="0" MaxValue="100"  Increment="5" Value="{Binding Beatrix.RiotBladeOverridePct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum MP percentage to recover MP with Riot Blade"/>
                    </Grid>
                </Expander>
            </Grid>
        </mahAppsControls:MetroTabItem>

         <mahAppsControls:MetroTabItem Header="Overlay">
            <Grid HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <CheckBox Grid.Row="0" Content="Show Overlay" IsChecked="{Binding Settings.UseToggleOverlay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                
                <Expander Margin="2" Grid.Row="1" Header="{x:Static loc:Strings.OverlayToggles}">
                    <UniformGrid Columns="3" HorizontalAlignment="Center">
                        <CheckBox Content="{x:Static loc:Strings.Opener}" IsChecked="{Binding Beatrix.ShowOpener, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DPSPotion}" IsChecked="{Binding Beatrix.ShowDpsPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Stance Button" IsChecked="{Binding Beatrix.ShowSwordOath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Swap Button" IsChecked="{Binding Beatrix.ShowSwap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Provoke}" IsChecked="{Binding Beatrix.ShowProvoke, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Flash}" IsChecked="{Binding Beatrix.ShowFlash, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ShieldLob}" IsChecked="{Binding Beatrix.ShowShieldLob, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Buffs}" IsChecked="{Binding Beatrix.ShowBuffs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ManualCover}" IsChecked="{Binding Beatrix.ShowManualCover, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.CoverTarget}" IsChecked="{Binding Beatrix.ShowCoverTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ManualInterrupt}" IsChecked="{Binding Beatrix.ShowManualInterrupt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.InterruptList}" IsChecked="{Binding Beatrix.ShowInterruptList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        
                    </UniformGrid>
                </Expander>

                <Expander Margin="2" Grid.Row="2" Header="{x:Static loc:Strings.DefensiveOverlayToggles}">
                    <UniformGrid Columns="3" HorizontalAlignment="Center">
                        <CheckBox Content="{x:Static loc:Strings.Defensives}" IsChecked="{Binding Beatrix.ShowDefensives, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.BusterDefense}" IsChecked="{Binding Beatrix.ShowBusterDefense, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Bulwark}" IsChecked="{Binding Beatrix.ShowBulwark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Sentinel}" IsChecked="{Binding Beatrix.ShowSentinel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Sheltron}" IsChecked="{Binding Beatrix.ShowSheltron, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Intervention" IsChecked="{Binding Beatrix.ShowIntervention, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DivineVeil}" IsChecked="{Binding Beatrix.ShowDivineVeil, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ClemencyTarget}" IsChecked="{Binding Beatrix.ShowClemencyTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ManualClemency}" IsChecked="{Binding Beatrix.ShowManualClemency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.HallowedGround}" IsChecked="{Binding Beatrix.ShowHallowedGround, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Rampart}" IsChecked="{Binding Beatrix.ShowRampart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Anticipation" IsChecked="{Binding Beatrix.ShowAnticipation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Awareness}" IsChecked="{Binding Beatrix.ShowAwareness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Convalescence}" IsChecked="{Binding Beatrix.ShowConvalescence, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Reprisal}" IsChecked="{Binding Beatrix.ShowReprisal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </Expander>
             </Grid>
            </mahAppsControls:MetroTabItem>

            <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Hotkeys}">
            <mahAppsControls:MetroTabItem.DataContext>
                <viewModels:HotkeysViewModel />
            </mahAppsControls:MetroTabItem.DataContext>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <UniformGrid Grid.Row="0" Columns="5" HorizontalAlignment="Center">
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Opener}" ModKeySetting="{Binding Beatrix.OpenerModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.OpenerKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Potion}" ModKeySetting="{Binding Beatrix.PotionModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.PotionKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Tank Swap" ModKeySetting="{Binding Beatrix.TankSwapModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.TankSwapKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.OathSwap}" ModKeySetting="{Binding Beatrix.SwordOathModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.SwordOathKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Main/Off Tank" ModKeySetting="{Binding Beatrix.MainTankModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.MainTankKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="AoE" ModKeySetting="{Binding Beatrix.FlashModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.FlashKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.ShieldLob}" ModKeySetting="{Binding Beatrix.ShieldLobModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.ShieldLobKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Fight or Flight" ModKeySetting="{Binding Beatrix.FightorFlightModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.FightorFlightKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Requiescat" ModKeySetting="{Binding Beatrix.RequiescatModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.RequiescatKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Defensives}" ModKeySetting="{Binding Beatrix.DefensivesModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.DefensivesKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.TankBusters}" ModKeySetting="{Binding Beatrix.ConvalescenceModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.ConvalescenceKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.HallowedGround}" ModKeySetting="{Binding Beatrix.HallowedGroundModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.HallowedGroundKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Sheltron}" ModKeySetting="{Binding Beatrix.SheltronModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.SheltronKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Clemency}" ModKeySetting="{Binding Beatrix.ClemencyModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.ClemencyKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.DivineVeil}" ModKeySetting="{Binding Beatrix.DivineVeilModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.DivineVeilKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Sentinel}" ModKeySetting="{Binding Beatrix.SentinelModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.SentinelKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Bulwark}" ModKeySetting="{Binding Beatrix.BulwarkModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.BulwarkKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Rampart}" ModKeySetting="{Binding Beatrix.RampartModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.RampartKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Anticipation" ModKeySetting="{Binding Beatrix.ForesightModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.ForesightKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Awareness}" ModKeySetting="{Binding Beatrix.AwarenessModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.AwarenessKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Convalescence}" ModKeySetting="{Binding Beatrix.ConvalescenceModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.ConvalescenceKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Reprisal}" ModKeySetting="{Binding Beatrix.ReprisalModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.ReprisalKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="Interrupts" ModKeySetting="{Binding Beatrix.InterruptModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.InterruptKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
                <Separator Grid.Row="1" Margin="10" />
                <Label Grid.Row="2" HorizontalAlignment="Center" Content="Preset Hotkeys" />
                <UniformGrid Grid.Row="3" Columns="5" VerticalAlignment="Top">
                    <controls:HotkeyControl Text="{Binding Beatrix.PresetNames.Preset1Name}" ModKeySetting="{Binding Beatrix.Preset1Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.Preset1Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Beatrix.PresetNames.Preset2Name}" ModKeySetting="{Binding Beatrix.Preset2Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.Preset2Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Beatrix.PresetNames.Preset3Name}" ModKeySetting="{Binding Beatrix.Preset3Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.Preset3Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Beatrix.PresetNames.Preset4Name}" ModKeySetting="{Binding Beatrix.Preset4Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.Preset4Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Beatrix.PresetNames.Preset5Name}" ModKeySetting="{Binding Beatrix.Preset5Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Beatrix.Preset5Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
            </Grid>
        </mahAppsControls:MetroTabItem>
        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Opener}">
            <openers:Beatrix_Opener />
        </mahAppsControls:MetroTabItem>
        <mahAppsControls:MetroTabItem Header="Presets">
            <Grid Margin="0,10" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Grid.DataContext>
                    <viewModels:BeatrixPresetsViewModel />
                </Grid.DataContext>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Load" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadSettings}" />
                    <Button Grid.Column="1" Content="Save" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SaveSettingsAs}" />
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Set Preset 1" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset1}" />
                    <Button Grid.Column="1" Content="Set Preset 2" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset2}" />
                    <Button Grid.Column="2" Content="Set Preset 3" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset3}" />
                    <Button Grid.Column="3" Content="Set Preset 4" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset4}" />
                    <Button Grid.Column="4" Content="Set Preset 5" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset5}" />
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="{Binding Presets.Preset1Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset1}" />
                    <Button Grid.Column="1" Content="{Binding Presets.Preset2Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset2}" />
                    <Button Grid.Column="2" Content="{Binding Presets.Preset3Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset3}" />
                    <Button Grid.Column="3" Content="{Binding Presets.Preset4Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset4}" />
                    <Button Grid.Column="4" Content="{Binding Presets.Preset5Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset5}" />
                </Grid>
            </Grid>
        </mahAppsControls:MetroTabItem>
    </mahAppsControls:MetroAnimatedTabControl>
</UserControl>