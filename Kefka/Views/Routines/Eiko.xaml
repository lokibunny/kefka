<UserControl x:Class="Kefka.Views.Routines.Eiko"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:Kefka.ViewModels"
             xmlns:controls="clr-namespace:Kefka.Controls"
             xmlns:enums="clr-namespace:Kefka.Models"
             xmlns:openers="clr-namespace:Kefka.Views.Openers"
             xmlns:loc="clr-namespace:Kefka.Properties"
             xmlns:utilities="clr-namespace:Kefka.Utilities"
             xmlns:mahAppsControls="clr-namespace:KefkaUI.Metro.Controls;assembly=KefkaUI.Metro"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <viewModels:SettingsViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <utilities:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <mahAppsControls:MetroAnimatedTabControl>
        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.General}">
            <Grid HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Expander Margin="2" Grid.Row="0" Header="{x:Static loc:Strings.RoutineToggles}">
                    <UniformGrid Columns="3" HorizontalAlignment="Center">
                        <CheckBox Content="{x:Static loc:Strings.AoE}" IsChecked="{Binding Eiko.UseAoE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DoTs}" IsChecked="{Binding Eiko.UseDoTs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Buffs}" IsChecked="{Binding Eiko.UseBuffs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Physick}" IsChecked="{Binding Eiko.UsePhysick, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Opener}" IsChecked="{Binding Eiko.UseOpener, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Swiftcast}" IsChecked="{Binding Eiko.UseSwiftcast, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DPSPotion}" IsChecked="{Binding Eiko.UseDpsPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Contagion}" IsChecked="{Binding Eiko.UseContagion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.AFAbilities}" IsChecked="{Binding Eiko.UseAetherflowAbilities, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ShadowFlare}" IsChecked="{Binding Eiko.UseShadowFlare, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Tridisaster}" IsChecked="{Binding Eiko.UseTriDisaster, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.EnergyDrain}" IsChecked="{Binding Eiko.UseEnergyDrain, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.PreRuinOGCDs}" IsChecked="{Binding Eiko.UsePreRuinoGcDs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.RuinIIFiller}" IsChecked="{Binding Eiko.UseRuin2Filler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.QuellingStrikes}" IsChecked="{Binding Eiko.UseQuellingStrikes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Aetherflow}" IsChecked="{Binding Eiko.UseAetherflow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.PhysickInCAssist}" IsChecked="{Binding Eiko.UsePhysickInNonAutonomous, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Resurrection" IsChecked="{Binding Eiko.UseResurrection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </Expander>

                <Expander Margin="2" Grid.Row="1" Header="{x:Static loc:Strings.OverlayToggles}">
                    <UniformGrid Columns="3" HorizontalAlignment="Center">
                        <CheckBox Content="{x:Static loc:Strings.AoE}" IsChecked="{Binding Eiko.ShowAoE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Buffs}" IsChecked="{Binding Eiko.ShowBuffs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DoTs}" IsChecked="{Binding Eiko.ShowDoTs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Physick}" IsChecked="{Binding Eiko.ShowPhysick, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Opener}" IsChecked="{Binding Eiko.ShowOpener, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Swiftcast}" IsChecked="{Binding Eiko.ShowSwiftcast, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.DPSPotion}" IsChecked="{Binding Eiko.ShowDpsPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Contagion}" IsChecked="{Binding Eiko.ShowContagion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Tridisaster}" IsChecked="{Binding Eiko.ShowTriDisaster, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.EnergyDrain}" IsChecked="{Binding Eiko.ShowEnergyDrain, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.RuinIIFiller}" IsChecked="{Binding Eiko.ShowRuin2Filler, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.AFAbilities}" IsChecked="{Binding Eiko.ShowAetherflowAbilities, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.ShadowFlare}" IsChecked="{Binding Eiko.ShowShadowFlare, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.QuellingStrikes}" IsChecked="{Binding Eiko.ShowQuellingStrikes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.PreRuinOGCDs}" IsChecked="{Binding Eiko.UsePreRuinoGcDs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.Aetherflow}" IsChecked="{Binding Eiko.ShowAetherflow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="{x:Static loc:Strings.PhysickInCAssist}" IsChecked="{Binding Eiko.ShowPhysickInNonAutonomous, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <CheckBox Content="Resurrection" IsChecked="{Binding Eiko.ShowResurrection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </Expander>

                <Expander Margin="2" Grid.Row="2" Header="{x:Static loc:Strings.RefreshTimersMiscSettings}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <UniformGrid Grid.Row="0">
                        </UniformGrid>

                        <Separator Grid.Row="1" Margin="0, 0, 0, 10" />

                        <UniformGrid Grid.Row="2" Columns="2" HorizontalAlignment="Center">
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100"  Increment="10"  LabelContent="{x:Static loc:Strings.MPLimitPct}" Value="{Binding Eiko.MpLimitPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100000"  Increment="250"  LabelContent="{x:Static loc:Strings.TriDisasterMinHP}" Value="{Binding Eiko.TriDisasterMinHp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="250"  LabelContent="{x:Static loc:Strings.BioRefresh}" Value="{Binding Eiko.BioRfsh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="250"  LabelContent="{x:Static loc:Strings.BioIIRefresh}" Value="{Binding Eiko.BioIiRfsh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="250"  LabelContent="{x:Static loc:Strings.MiasmaRefresh}" Value="{Binding Eiko.MiasmaRfsh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="20000"  Increment="250"  LabelContent="{x:Static loc:Strings.MiasmaIIRefresh}" Value="{Binding Eiko.MiasmaIiRfsh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100"  Increment="10"  LabelContent="{x:Static loc:Strings.SelfHealPct}" Value="{Binding Eiko.SelfHealPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="10000"  Increment="500"  LabelContent="{x:Static loc:Strings.MinBaneTime}" Value="{Binding Eiko.MinBaneTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100"  Increment="10"  LabelContent="Resurrection Min MP %" Value="{Binding Eiko.ResurrectionMinMpPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </UniformGrid>
                    </Grid>
                </Expander>

                <Expander Margin="2" Grid.Row="3" Header="{x:Static loc:Strings.AoESettings}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" HorizontalAlignment="Center">
                            <CheckBox HorizontalAlignment="Center" Content="{x:Static loc:Strings.AoE}" IsChecked="{Binding Eiko.UseAoE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox HorizontalAlignment="Center" Content="{x:Static loc:Strings.ShadowFlare}" IsChecked="{Binding Eiko.UseShadowFlare, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="10"  Increment="1"  LabelContent="{x:Static loc:Strings.AoETargets}" Value="{Binding Eiko.MobCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </Grid>
                </Expander>

                <Expander Margin="2" Grid.Row="4" Header="{x:Static loc:Strings.SummonSettings}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel>
                            <CheckBox HorizontalAlignment="Center" Content="{x:Static loc:Strings.Summons}" IsChecked="{Binding Eiko.UseSummonPets, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <StackPanel>
                                <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.SummonSelection}" />
                                <ComboBox Margin="2" MinWidth="230" SelectedValue="{Binding Eiko.SelectedEikoSummon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:EikoSummonMode}}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100"  Increment="10"  LabelContent="{x:Static loc:Strings.SummonHealPct}" Value="{Binding Eiko.SummonHealPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>

                            <CheckBox HorizontalAlignment="Center" Content="{x:Static loc:Strings.Heel}" IsChecked="{Binding Eiko.UseHeel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100"  Increment="1"  LabelContent="{x:Static loc:Strings.HeelDistance}" Value="{Binding Eiko.HeelDistance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>

                        <UniformGrid Grid.Row="2" Margin="0,5" HorizontalAlignment="Center">

                            <StackPanel>
                                <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.GlamourSelectionGaruda}" />
                                <ComboBox Margin="2" MinWidth="230" SelectedValue="{Binding Eiko.SelectedGarudaGlamour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:GarudaGlamour}}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel>
                                <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.GlamourSelectionTitan}" />
                                <ComboBox Margin="2" MinWidth="230"  SelectedValue="{Binding Eiko.SelectedTitanGlamour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:TitanGlamour}}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel>
                                <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.GlamourSelectionIfrit}" />
                                <ComboBox Margin="2" MinWidth="230"  SelectedValue="{Binding Eiko.SelectedIfritGlamour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:IfritGlamour}}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                            <controls:KefkaIntNumeric Margin="2" MinWidth="230" MinValue="0" MaxValue="100"  Increment="10"  LabelContent="{x:Static loc:Strings.SummonHealPct}" Value="{Binding Eiko.SummonHealPct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </UniformGrid>
                    </Grid>
                </Expander>
            </Grid>
        </mahAppsControls:MetroTabItem>

        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Hotkeys}">
            <mahAppsControls:MetroTabItem.DataContext>
                <viewModels:HotkeysViewModel />
            </mahAppsControls:MetroTabItem.DataContext>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <UniformGrid Columns="5" HorizontalAlignment="Center">
                    <controls:HotkeyControl Text="{x:Static loc:Strings.ShadowFlare}" ModKeySetting="{Binding Eiko.ShadowFlareModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.ShadowFlareKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Buffs}" ModKeySetting="{Binding Eiko.BuffsModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.BuffsKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.DoTs}" ModKeySetting="{Binding Eiko.DoTsModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.DoTsKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Summons}" ModKeySetting="{Binding Eiko.SummonModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.SummonKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Potion}" ModKeySetting="{Binding Eiko.PotionModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.PotionKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Contagion}" ModKeySetting="{Binding Eiko.ContagionModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.ContagionKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Swiftcast}" ModKeySetting="{Binding Eiko.SwiftcastModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.SwiftcastKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.AFAbilities}" ModKeySetting="{Binding Eiko.AetherflowAbilitiesModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.AetherflowAbilitiesKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Aetherflow}" ModKeySetting="{Binding Eiko.AetherflowModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.AetherflowKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Opener}" ModKeySetting="{Binding Eiko.OpenerModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.OpenerKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.Tridisaster}" ModKeySetting="{Binding Eiko.TriDisasterModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.TriDisasterKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.AoE}" ModKeySetting="{Binding Eiko.AoEModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.AoEKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{x:Static loc:Strings.RuinIIFiller}" ModKeySetting="{Binding Eiko.RuinIIFillerModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.RuinIIFillerKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
                <Separator Grid.Row="1" Margin="10" />
                <Label Grid.Row="2" HorizontalAlignment="Center" Content="Preset Hotkeys" />
                <UniformGrid Grid.Row="3" Columns="5" VerticalAlignment="Top">
                    <controls:HotkeyControl Text="{Binding Eiko.PresetNames.Preset1Name}" ModKeySetting="{Binding Eiko.Preset1Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.Preset1Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Eiko.PresetNames.Preset2Name}" ModKeySetting="{Binding Eiko.Preset2Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.Preset2Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Eiko.PresetNames.Preset3Name}" ModKeySetting="{Binding Eiko.Preset3Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.Preset3Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Eiko.PresetNames.Preset4Name}" ModKeySetting="{Binding Eiko.Preset4Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.Preset4Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:HotkeyControl Text="{Binding Eiko.PresetNames.Preset5Name}" ModKeySetting="{Binding Eiko.Preset5Modifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeySetting="{Binding Eiko.Preset5Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
            </Grid>
        </mahAppsControls:MetroTabItem>
        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Opener}">
            <openers:Eiko_Opener />
        </mahAppsControls:MetroTabItem>
        <mahAppsControls:MetroTabItem Header="Presets">
            <Grid Margin="0,10" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Grid.DataContext>
                    <viewModels:EikoPresetsViewModel />
                </Grid.DataContext>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Load" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadSettings}" />
                    <Button Grid.Column="1" Content="Save" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SaveSettingsAs}" />
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="Set Preset 1" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset1}" />
                    <Button Grid.Column="1" Content="Set Preset 2" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset2}" />
                    <Button Grid.Column="2" Content="Set Preset 3" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset3}" />
                    <Button Grid.Column="3" Content="Set Preset 4" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset4}" />
                    <Button Grid.Column="4" Content="Set Preset 5" HorizontalAlignment="Center" MinWidth="80" Command="{Binding SetPreset5}" />
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="{Binding Presets.Preset1Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset1}" />
                    <Button Grid.Column="1" Content="{Binding Presets.Preset2Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset2}" />
                    <Button Grid.Column="2" Content="{Binding Presets.Preset3Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset3}" />
                    <Button Grid.Column="3" Content="{Binding Presets.Preset4Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset4}" />
                    <Button Grid.Column="4" Content="{Binding Presets.Preset5Name}" HorizontalAlignment="Center" MinWidth="80" Command="{Binding LoadPreset5}" />
                </Grid>
            </Grid>
        </mahAppsControls:MetroTabItem>
    </mahAppsControls:MetroAnimatedTabControl>
</UserControl>