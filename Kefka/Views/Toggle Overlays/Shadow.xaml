<UserControl x:Class="Kefka.Views.Toggle_Overlays.Shadow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModels="clr-namespace:Kefka.ViewModels"
             xmlns:enums="clr-namespace:Kefka.Models"
             xmlns:loc="clr-namespace:Kefka.Properties"
             xmlns:utilities="clr-namespace:Kefka.Utilities"
             xmlns:mahAppsControls="clr-namespace:KefkaUI.Metro.Controls;assembly=KefkaUI.Metro">

    <UserControl.DataContext>
        <viewModels:SettingsViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <utilities:BooleanToVisibilityConverter x:Key="BoolToVis" />
            <utilities:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <mahAppsControls:MetroAnimatedTabControl HorizontalAlignment="Stretch" Background="Transparent">
        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.General}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <UniformGrid Rows="{Binding Settings.GridRows, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <CheckBox Content="{x:Static loc:Strings.AoE}" Visibility="{Binding Shadow.ShowAoE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseAoE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.Buffs}" Visibility="{Binding Shadow.ShowBuffs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseBuffs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.DoTs}" Visibility="{Binding Shadow.ShowDots, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseDots, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.Opener}" Visibility="{Binding Shadow.ShowOpener, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseOpener, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.Ninjutsu}" Visibility="{Binding Shadow.ShowNinjutsu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseNinjutsu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.Shukuchi}" Visibility="{Binding Shadow.ShowShukuchi, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseShukuchi, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.Assassinate}" Visibility="{Binding Shadow.ShowAssassinate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseAssassinate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.DPSPotion}" Visibility="{Binding Shadow.ShowDpsPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseDpsPotion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.ShadeShift}" Visibility="{Binding Shadow.ShowShadeShift, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseShadeShift, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.HutonOoC}" Visibility="{Binding Shadow.ShowMudrasOoc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseMudrasOoc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Content="{x:Static loc:Strings.GoadTarget}" Visibility="{Binding Settings.ShowGoadTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Settings.Instance.UseGoadTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" Checked="UncheckManualGoad" />
                    <CheckBox Content="{x:Static loc:Strings.InterruptList}" Visibility="{Binding Shadow.ShowInterruptList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseInterruptList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" Checked="UncheckManualInterrupt" />
                    <CheckBox Content="{x:Static loc:Strings.ShadeTarget}" Visibility="{Binding Shadow.ShowShadewalkerTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseShadewalkerTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="UncheckManualShadewalker" />
                    <CheckBox Content="{x:Static loc:Strings.ManualGoad}" Visibility="{Binding Settings.ShowManualGoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Settings.Instance.UseManualGoad, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" Checked="UncheckGoadTarget" />
                    <CheckBox Content="{x:Static loc:Strings.ManualShade}" Visibility="{Binding Shadow.ShowManualShadewalker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseManualShadewalker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="UncheckShadewalkerTarget" />
                    <CheckBox Content="{x:Static loc:Strings.DestroyTarget}" IsChecked="{Binding Settings.DestroyTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.DeathBlossom}" Visibility="{Binding Shadow.ShowDeathBlossom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseDeathBlossom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.ManualInterrupt}" Visibility="{Binding Shadow.ShowManualInterrupt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseManualInterrupt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" Checked="UncheckInterruptList" />
                    <CheckBox Content="{x:Static loc:Strings.ThrowingDagger}" Visibility="{Binding Shadow.ShowThrowingDagger, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseThrowingDagger, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="{x:Static loc:Strings.DynamicPositionals}" Visibility="{Binding Shadow.ShowDynamicPositionals, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseDynamicPositionals, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="Ten Chi Jin" Visibility="{Binding Shadow.ShowTenChiJin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseTenChiJin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="True North" Visibility="{Binding Shadow.ShowTrueNorth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseTrueNorth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                    <CheckBox Content="Feint" Visibility="{Binding Shadow.ShowFeint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" IsChecked="{Binding Shadow.Instance.UseFeint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ActivateFFXIVCommand}" />
                </UniformGrid>
                <StackPanel Orientation="Horizontal" Grid.Row="1">
                    <StackPanel.DataContext>
                        <viewModels:ShadowPresetsViewModel />
                    </StackPanel.DataContext>
                    <Button Content="{Binding Presets.Preset1Name}" HorizontalAlignment="Center" MinWidth="80" Visibility="{Binding Presets.ShowPreset1, Converter={StaticResource BoolToVis}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding LoadPreset1}" />
                    <Button Content="{Binding Presets.Preset2Name}" HorizontalAlignment="Center" MinWidth="80" Visibility="{Binding Presets.ShowPreset2, Converter={StaticResource BoolToVis}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding LoadPreset2}" />
                    <Button Content="{Binding Presets.Preset3Name}" HorizontalAlignment="Center" MinWidth="80" Visibility="{Binding Presets.ShowPreset3, Converter={StaticResource BoolToVis}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding LoadPreset3}" />
                    <Button Content="{Binding Presets.Preset4Name}" HorizontalAlignment="Center" MinWidth="80" Visibility="{Binding Presets.ShowPreset4, Converter={StaticResource BoolToVis}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding LoadPreset4}" />
                    <Button Content="{Binding Presets.Preset5Name}" HorizontalAlignment="Center" MinWidth="80" Visibility="{Binding Presets.ShowPreset5, Converter={StaticResource BoolToVis}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding LoadPreset5}" />
                </StackPanel>
            </Grid>
        </mahAppsControls:MetroTabItem>
        <mahAppsControls:MetroTabItem Header="{x:Static loc:Strings.Advanced}">
            <WrapPanel>
                <StackPanel>
                    <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.NinjutsuMode}" />
                    <ComboBox Margin="4" SelectedItem="{Binding Shadow.Instance.Ninjutsu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:NinjutsuMode}}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel>
                    <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.ShadeTarget}" />
                    <ComboBox  Margin="4" SelectedValue="{Binding Instance.ShadewalkerTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Instance.ShadewalkerTargetCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.DataContext>
                            <viewModels:ShadewalkerTargetViewModel />
                        </ComboBox.DataContext>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel>
                    <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.GoadTarget}" />
                    <ComboBox Margin="4" SelectedItem="{Binding Instance.GoadTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Instance.GoadTargetCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.DataContext>
                            <viewModels:GoadTargetViewModel />
                        </ComboBox.DataContext>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel>
                    <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.SmokeScreenTarget}" />
                    <ComboBox Margin="4" SelectedItem="{Binding Instance.SmokeScreenTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Instance.SmokeScreenTargetCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.DataContext>
                            <viewModels:SmokeScreenTargetViewModel />
                        </ComboBox.DataContext>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel>
                    <Label HorizontalAlignment="Center" Content="{x:Static loc:Strings.KissMode}" />
                    <ComboBox Margin="4" SelectedItem="{Binding Shadow.Instance.TcjSelection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={utilities:EnumBindingSource {x:Type enums:TCJMode}}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </WrapPanel>
        </mahAppsControls:MetroTabItem>
    </mahAppsControls:MetroAnimatedTabControl>
</UserControl>